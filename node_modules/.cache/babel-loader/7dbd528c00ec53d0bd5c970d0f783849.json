{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\custom-hook api\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/useHttp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n\n  const createdTask = (taskText, taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      Url: 'https://hooks-ba45c-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        text: taskText\n      }\n    }, createdTask.bind(null, taskText));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"JoyexMXKKn7SbBANWuE0NYIBDqY=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/custom-hook api/src/components/NewTask/NewTask.js"],"names":["Section","TaskForm","useHttp","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","createdTask","taskText","taskData","generatedId","name","id","text","onAddTask","enterTaskHandler","Url","method","headers","body","bind"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAM;AAACC,IAAAA,SAAD;AAAWC,IAAAA,KAAX;AAAiBC,IAAAA,WAAW,EAACC;AAA7B,MAA8CN,OAAO,EAA3D;;AAEA,QAAMO,WAAW,GAAC,CAACC,QAAD,EAAUC,QAAV,KAAqB;AACtC,UAAMC,WAAW,GAAGD,QAAQ,CAACE,IAA7B,CADsC,CACH;;AACnC,UAAMJ,WAAW,GAAG;AAAEK,MAAAA,EAAE,EAAEF,WAAN;AAAmBG,MAAAA,IAAI,EAAEL;AAAzB,KAApB;AAEAN,IAAAA,KAAK,CAACY,SAAN,CAAgBP,WAAhB;AACA,GALD;;AAOD,QAAMQ,gBAAgB,GAAG,MAAOP,QAAP,IAAoB;AAC3CF,IAAAA,eAAe,CAAC;AAACU,MAAAA,GAAG,EAAC,4DAAL;AAEhBC,MAAAA,MAAM,EAAE,MAFQ;AAGhBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHO;AAMhBC,MAAAA,IAAI,EAAE;AAAEN,QAAAA,IAAI,EAAEL;AAAR;AANU,KAAD,EAQdD,WAAW,CAACa,IAAZ,CAAiB,IAAjB,EAAsBZ,QAAtB,CARc,CAAf;AASD,GAVD;;AAWE,sBACA,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEO,gBAAvB;AAAyC,MAAA,OAAO,EAAEZ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMH,CA5BD;;GAAMH,O;UAEiDD,O;;;KAFjDC,O;AA8BN,eAAeA,OAAf","sourcesContent":["import Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/useHttp';\n\nconst NewTask = (props) => {\n  \n   const {isLoading,error,sendRequest:sendTaskRequest}=useHttp()\n\n   const createdTask=(taskText,taskData)=>{\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n   }\n\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest({Url:'https://hooks-ba45c-default-rtdb.firebaseio.com/tasks.json',\n \n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: { text: taskText },\n     }, \n     createdTask.bind(null,taskText));\n  };\n    return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}