{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nfunction useHttp(requestConfig, applyData) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.Url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n}\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;","map":{"version":3,"sources":["C:/Users/hp/Desktop/custom-hook api/src/hooks/useHttp.js"],"names":["useState","useHttp","requestConfig","applyData","isLoading","setIsLoading","error","setError","sendRequest","response","fetch","Url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,OAAT,CAAiBC,aAAjB,EAAgCC,SAAhC,EAA2C;AAAA;;AAEvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMQ,WAAW,GAAG,YAAY;AAC5BH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAER,aAAa,CAACS,GAAhB,EAAqB;AAC7CC,QAAAA,MAAM,EAAEV,aAAa,CAACU,MAAd,GAAqBV,aAAa,CAACU,MAAnC,GAA0C,KADL;AAE7CC,QAAAA,OAAO,EAAEX,aAAa,CAACW,OAAd,GAAsBX,aAAa,CAACW,OAApC,GAA4C,EAFR;AAG7CC,QAAAA,IAAI,EAACZ,aAAa,CAACY,IAAd,GAAoBC,IAAI,CAACC,SAAL,CAAed,aAAa,CAACY,IAA7B,CAApB,GAAuD;AAHf,OAArB,CAA5B;;AAOA,UAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AACAjB,MAAAA,SAAS,CAACgB,IAAD,CAAT;AAGH,KAhBD,CAgBE,OAAOE,GAAP,EAAY;AACVd,MAAAA,QAAQ,CAACc,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACH;;AACDjB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAvBD;;AAyBJ,SAAO;AACHD,IAAAA,SADG;AAEHE,IAAAA,KAFG;AAGHE,IAAAA;AAHG,GAAP;AAKC;;GAnCQP,O;;AAsCT,eAAeA,OAAf","sourcesContent":["import { useState } from 'react'\r\n\r\nfunction useHttp(requestConfig, applyData) {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const sendRequest = async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch( requestConfig.Url, {\r\n                method: requestConfig.method?requestConfig.method:'GET',\r\n                headers: requestConfig.headers?requestConfig.headers:{},\r\n                body:requestConfig.body? JSON.stringify(requestConfig.body):null,\r\n            }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Request failed!');\r\n            }\r\n\r\n            const data = await response.json();\r\n            applyData(data)\r\n\r\n\r\n        } catch (err) {\r\n            setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n\r\nreturn {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n}\r\n}\r\n\r\n\r\nexport default useHttp\r\n"]},"metadata":{},"sourceType":"module"}